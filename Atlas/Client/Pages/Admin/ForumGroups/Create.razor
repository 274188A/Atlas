@page "/admin/forum-groups/create"
@using Atlas.Shared.Models.Admin.ForumGroups
@attribute [Authorize(Policy = "Admin")]
@inject HttpClient Http
@inject NavigationManager navigationManager

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/admin">Home</a></li>
        <li class="breadcrumb-item"><a href="/admin/forum-groups">Forum Gorups</a></li>
        <li class="breadcrumb-item active" aria-current="page">@Title</li>
    </ol>
</nav>

<h3 class="mb-3">@Title</h3>

@if (_model == null)
{
    <Loading></Loading>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@_model.ForumGroup" OnValidSubmit="HandleValidSubmitAsync">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label class="control-label">Name</label>
                    <InputText id="name" @bind-Value="_model.ForumGroup.Name" Class="form-control" />
                </div>
                <div class="form-group">
                    <label class="control-label">Permission Set</label>
                    <InputSelect @bind-Value="_model.ForumGroup.PermissionSetId" Class="form-control">
                        <option value="">Inherit from Site Settings</option>
                        @foreach (var item in _model.PermissionSets)
                            {
                            <option value="@item.Id">@item.Name</option>
                            }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </EditForm>
        </div>
    </div>
}

@code {
    private const string Title = "Create Forum Group";
    private CreateModel _model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _model = await Http.GetFromJsonAsync<CreateModel>("api/admin/forum-groups/create-model");
    }

    private async Task HandleValidSubmitAsync()
    {
        await Http.PostAsJsonAsync($"api/admin/forum-groups/create", _model.ForumGroup);
        navigationManager.NavigateTo("/admin/forum-groups");
    }
}

@page "/forum/{id:guid}"
@using Atlas.Client.Services
@using Atlas.Models.Public
@inject AnonymousService Service;
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ISecurityService SecurityService

@if (Model == null)
{
    <Loading />
}
else
{
    if (DisplayPage)
    {
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model?.Forum.Name</li>
            </ol>
        </nav>

        <div class="row">
            <div class="col-md-6">
                <h4 class="mb-3">@Model?.Forum.Name</h4>
            </div>
            <div class="col-md-6 text-right mb-3">
                <AuthorizeView>
                    <Authorized>
                        <a href="/forum/@Model?.Forum.Id/post" class="btn btn-primary" role="button">New Topic</a>
                    </Authorized>
                    <NotAuthorized>
                        <a href="authentication/login?returnUrl=@Uri.EscapeDataString(Navigation.Uri)">Log in</a> to start a new discussion.
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>

        if (Model.Topics.Items.Count == 0)
        {
            <NoRecords Text="No topics found for this forum." />
        }
        else
        {
            <div class="card">
                <ul class="list-group list-group-flush">
                    @foreach (var item in Model.Topics.Items)
                    {
                        <li class="list-group-item py-3">
                            <p class="card-text"><a href="/forum/@Model.Forum.Id/@item.Id">@item.Title</a></p>
                            <div class="row small">
                                <div class="col-md-6 font-weight-bold">
                                    @item.MemberDisplayName
                                </div>
                                <div class="col-md-6 text-right">
                                    @item.TimeStamp.ToShortDateString() @item.TimeStamp.ToShortTimeString()
                                    &nbsp;&nbsp;
                                    <span class="font-weight-bold">@item.TotalReplies</span> Replies
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </div>

            <div class="mt-3">
                <Pager TotalPages="Model.Topics.TotalPages" OnLoadDataCallback="@LoadDataAsync"></Pager>
            </div>
        }
    }
    else
    {
        <SomethingWrong />
    }
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    [Parameter]
    public Guid Id { get; set; }

    private ForumPageModel Model { get; set; }

    public bool DisplayPage { get; set; }

    private async Task LoadDataAsync(int page)
    {
        var authState = await AuthenticationStateTask;
        var user = authState.User;

        try
        {
            var requestUri = $"api/public/forum/{Id}?page={page}";

            if (user.Identity.IsAuthenticated)
            {
                Model = await Http.GetFromJsonAsync<ForumPageModel>(requestUri);
            }
            else
            {
                Model = await Service.GetFromJsonAsync<ForumPageModel>(requestUri);
            }

            DisplayPage = true;
        }
        catch (Exception)
        {
            Model = new ForumPageModel();
            DisplayPage = false;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync(1);
    }
}
@layout AdminLayout
@page "/admin/members"
@using Atlas.Models.Admin.Members
@attribute [Authorize(Policy = "Admin")]
@inject HttpClient Http

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/admin">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">@Title</li>
    </ol>
</nav>

<div class="row">
    <div class="col-md-6">
        <h3 class="mb-3">@Title</h3>
    </div>
    <div class="col-md-6 text-right mb-3">
        <a href="/admin/members/create" class="btn btn-primary" role="button">Create New</a>
    </div>
</div>

@if (Model == null)
{
    <Loading />
}
else if (Model.Members.Count == 0)
{
    <NoRecords />
}
else
{
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th scope="col">&nbsp;</th>
                <th scope="col">Display Name</th>
                <th scope="col">Total Topics</th>
                <th scope="col">Total Replies</th>
                <th scope="col">&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Members)
            {
                <tr>
                    <td class="text-center">&nbsp;</td>
                    <td>@item.DisplayName</td>
                    <td class="text-center">@item.TotalTopics</td>
                    <td class="text-center">@item.TotalReplies</td>
                    <td>
                        <a href="/admin/members/edit/@item.Id" class="btn btn-secondary" role="button">Edit</a>
                        <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#confirm-modal" data-id="@item.Id" @onclick="() => SetDeleteId(item.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <ConfirmModal Title="Delete Member"
                  Body="Are you sure you want to delete this Member?"
                  Button="Delete"
                  OnClickCallback="@DeleteAsync" />
}

@code {
    private const string Title = "Members";
    private IndexPageModel Model { get; set; }
    private Guid DeleteId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await Http.GetFromJsonAsync<IndexPageModel>("api/admin/members/index-model");
    }

    protected void SetDeleteId(Guid Id)
    {
        DeleteId = Id;
    }

    protected async Task DeleteAsync(MouseEventArgs e)
    {
        await Http.DeleteAsync($"api/admin/members/delete/{DeleteId}");
        await OnInitializedAsync();
    }
}

@page "/admin/forums"
@page "/admin/forums/{forumGroupId:guid}"
@using Atlas.Shared.Models.Admin.Forums
@attribute [Authorize(Policy = "Admin")]
@inject HttpClient Http

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/admin">Home</a></li>
        <li class="breadcrumb-item"><a href="/admin/forum-groups">Forum Groups</a></li>
        <li class="breadcrumb-item active" aria-current="page">@Title</li>
    </ol>
</nav>

<div class="row">
    <div class="col-md-6">
        <h3 class="mb-3">@Title</h3>
    </div>
    <div class="col-md-6 text-right mb-3">
        <a href="/admin/forums/create/@ForumGroupId" class="btn btn-primary" role="button">Create New</a>
    </div>
</div>

@if (Model == null)
{
    <Loading />
}
else if (Model.Forums.Count == 0)
{
    <NoRecords />
}
else
{
    <div class="form-group row mb-4">
        <label class="col-sm-2 col-form-label">Select Forum Group:</label>
        <div class="col-sm-6">
            <select id="forumGroupId" @bind="ForumGroupId" @onselectionchange="ForumGroupChanged" class="form-control">
                @foreach (var item in Model.ForumGroups)
                {
                    <option value="@item.Id">@item.Name</option>
                }
            </select>
        </div>
    </div>

    @*<div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label for="forumGroupId" class="control-label">Forum Group:</label>
                <select id="forumGroupId" @bind="ForumGroupId" class="form-control">
                    @foreach (var item in Model.ForumGroups)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </div>
        </div>
    </div>*@

    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th scope="col">&nbsp;</th>
                <th scope="col">Name</th>
                <th scope="col">Total Topics</th>
                <th scope="col">Total Replies</th>
                <th scope="col">Permission Set</th>
                <th scope="col">&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Forums)
            {
                <tr>
                    <td class="text-center">
                        @if (item.SortOrder > 1)
                        {
                            <button type="button" class="btn btn-link btn-sm" @onclick="() => MoveUp(item.Id)">
                                <span class="fas fa-arrow-up"></span>
                            </button>
                        }
                        @if (item.SortOrder < Model.Forums.Count)
                        {
                            <button type="button" class="btn btn-link btn-sm" @onclick="() => MoveDown(item.Id)">
                                <span class="fas fa-arrow-down"></span>
                            </button>
                        }
                    </td>
                    <td>@item.Name</td>
                    <td>@item.TotalTopics</td>
                    <td>@item.TotalReplies</td>
                    <td>@item.PermissionSetName</td>
                    <td>
                        <a href="/admin/forum-groups/edit/@item.Id" class="btn btn-secondary" role="button">Edit</a>
                        <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#confirm-modal" data-id="@item.Id" @onclick="() => SetDeleteId(item.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <ConfirmModal Title="Delete Forum"
                  Body="Are you sure you want to delete this Forum?"
                  Button="Delete"
                  OnClickCallback="@DeleteAsync" />
}

@code {
    private const string Title = "Forums";
    [Parameter] public Guid? ForumGroupId { get; set; } = null;
    private IndexModel Model { get; set; }
    private Guid DeleteId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var requestUri = ForumGroupId == null
            ? $"api/admin/forums/index-model"
            : $"api/admin/forums/index-model/{ForumGroupId}";

        Model = await Http.GetFromJsonAsync<IndexModel>(requestUri);
    }

    private async Task ForumGroupChanged(EventArgs args)
    {
        Model = await Http.GetFromJsonAsync<IndexModel>($"api/admin/forums/index-model/{ForumGroupId}");
        StateHasChanged();
    }

    private async Task MoveUp(Guid id)
    {
        await Http.PostAsJsonAsync("api/admin/forums/move-up", id);
        await OnInitializedAsync();
    }

    private async Task MoveDown(Guid id)
    {
        await Http.PostAsJsonAsync("api/admin/forums/move-down", id);
        await OnInitializedAsync();
    }

    protected void SetDeleteId(Guid Id)
    {
        DeleteId = Id;
    }

    protected async Task DeleteAsync(MouseEventArgs e)
    {
        await Http.DeleteAsync($"api/admin/forums/delete/{DeleteId}");
        await OnInitializedAsync();
    }
}

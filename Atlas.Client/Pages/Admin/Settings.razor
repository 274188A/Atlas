@layout AdminLayout
@page "/admin/settings"
@using Atlas.Models.Admin.Site
@attribute [Authorize(Policy = "Admin")]
@inject NavigationManager NavigationManager
@inject HttpClient Http

<h3 class="mb-3">@Title</h3>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/admin">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">@Title</li>
    </ol>
</nav>

@if (Model == null)
{
    <Loading />
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="Model" OnValidSubmit="UpdateAsync">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label for="title" class="control-label">Title</label>
                    <InputText id="title" @bind-Value="Model.Title" Class="form-control" />
                    <ValidationMessage For="@(() => Model.Title)" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Update" class="btn btn-primary" />
                </div>
                <ValidationSummary />
            </EditForm>
        </div>
    </div>

    <TargetEvents Id="Model.SiteId"></TargetEvents>
}

@code {
    private const string Title = "Settings";
    private SettingsPageModel Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await Http.GetFromJsonAsync<SettingsPageModel>("api/admin/sites/settings");
    }

    private async Task UpdateAsync()
    {
        await Http.PostAsJsonAsync("api/admin/sites/update", Model);
        NavigationManager.NavigateTo("/admin");
    }
}
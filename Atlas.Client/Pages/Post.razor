@page "/forum/{forumId:guid}/post"
@using Atlas.Models.Public
@inject HttpClient Http
@inject NavigationManager NavigationManager

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item"><a href="/forum/@ForumId">@Model?.Forum.Name</a></li>
        <li class="breadcrumb-item active" aria-current="page">@Title</li>
    </ol>
</nav>

<h3 class="mb-3">@Title</h3>

@if (Model == null)
{
    <Loading />
}
else
{
    <div class="row">
        <div class="col-md-8">
            <EditForm Model="@Model.Topic" OnValidSubmit="SaveAsync">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label for="title" class="control-label">Title</label>
                    <InputText id="title" @bind-Value="Model.Topic.Title" Class="form-control" />
                    <ValidationMessage For="@(() => Model.Topic.Title)" />
                </div>
                <div class="form-group">
                    <ul class="nav nav-tabs" id="tabLinks" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="text-tab" data-toggle="tab" href="#text" role="tab" aria-controls="text" aria-selected="true">Text</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="preview-tab" data-toggle="tab" href="#preview" role="tab" aria-controls="preview" aria-selected="false" @onclick="@PreviewAsync">Preview</a>
                        </li>
                    </ul>
                    <div class="tab-content" id="tabContent">
                        <div class="tab-pane fade show active" id="text" role="tabpanel" aria-labelledby="text-tab">
                            <InputTextArea id="content" @bind-Value="Model.Topic.Content" Class="form-control" />
                        </div>
                        <div class="tab-pane fade" id="preview" role="tabpanel" aria-labelledby="preview-tab">
                            @if (Preview == null)
                            {
                                <Loading></Loading>
                            }
                            else
                            {
                                @((MarkupString)Preview)
                            }
                        </div>
                    </div>
                    <ValidationMessage For="@(() => Model.Topic.Content)" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
                </div>
                <ValidationSummary />
            </EditForm>
        </div>
    </div>
}

@code {
    private const string Title = "New Topic";
    [Parameter] public Guid ForumId { get; set; }
    private PostPageModel Model { get; set; }
    private string Preview { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Model = await Http.GetFromJsonAsync<PostPageModel>($"api/public/forum/{ForumId}/post");
    }

    private async Task SaveAsync()
    {
        await Http.PostAsJsonAsync("api/public/save-topic", Model);
        NavigationManager.NavigateTo($"/forum/{ForumId}");
    }

    private async Task PreviewAsync()
    {
        if (!string.IsNullOrWhiteSpace(Model.Topic.Content))
        {
            Preview = null;
            var response = await Http.PostAsJsonAsync("api/public/preview", Model.Topic.Content);
            Preview = await response.Content.ReadAsStringAsync();
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo($"/forum/{ForumId}");
    }
}
